// Generated by CoffeeScript 1.7.1
(function() {
  var EventEmitter, XikiExtensions, path,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  path = require("path");

  EventEmitter = require("events").EventEmitter;

  module.exports = XikiExtensions = (function(_super) {
    __extends(XikiExtensions, _super);

    function XikiExtensions(xiki) {
      this.xiki = xiki;
      this.xiki.packages.on("load-package", (function(_this) {
        return function(pkg) {
          return _this.addMenuFilesFromPackage(pkg);
        };
      })(this));
    }

    XikiExtensions.prototype.addMenuFilesFromPackage = function(pkg) {
      var dir;
      pkg.emit("load", "__extensions");
      dir = path.join(pkg.dir, "menu");
      if (!this.xiki.exists(dir)) {
        return pkg.emit("loaded", "__extensions");
      }
      return fs.readdir(dir, (function(_this) {
        return function(err, entries) {
          var e, _i, _len;
          if (err) {
            console.log(err);
            entries = [];
          }
          for (_i = 0, _len = entries.length; _i < _len; _i++) {
            e = entries[_i];
            _this.loadModule(pkg, dir, e);
          }
          if (!entries.length) {
            return pkg.emit("loaded", "__extensions");
          }
        };
      })(this));
    };

    XikiExtensions.prototype.loadModule = function(pkg, dir, name) {
      var coffeeFile, moduleName, sourceFile, text;
      sourceFile = path.normalize(path.join(dir, name));
      coffeeFile = sourceFile;
      name = name.replace(/\..*$/, '');
      moduleName = "" + pkg.name + "." + name;
      pkg.emit("load", moduleName);
      text = null;
      if (path.extname(sourceFile) === ".md") {
        return this.xiki.readFile(sourceFile, (function(_this) {
          return function(content) {
            return util.cookCoffee(content, function(code, text) {
              return _this.xiki.writeFile(coffeeFile, code, function() {
                requireModule(coffeeFile, {
                  _xikiFile: file,
                  _xikiName: moduleName,
                  _xikiPackage: pkg,
                  _xikiText: text
                });
                return pkg.emit("loaded", moduleName);
              });
            });
          };
        })(this));
      }
    };

    XikiExtensions.prototype.requireModule = function(file, metadata) {
      var module;
      module = require(file);
      _.extend(module, metadata);
      if (!module.menu) {
        if (metadata.__xikiText) {
          module.menu = metadata.__xikiText;
        }
      }
      this.modules.push(module);
      return module;
    };

    return XikiExtensions;

  })(EventEmitter);

}).call(this);
