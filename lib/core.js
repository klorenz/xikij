// Generated by CoffeeScript 1.7.1
(function() {
  var BaseXiki, Extension, ExtensionManager, PackageManager,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  require("coffee-script/register");

  PackageManager = (function() {
    function PackageManager() {}

    return PackageManager;

  })();

  ExtensionManager = (function() {
    function ExtensionManager() {
      this.extensionDirPaths = [];
      this.modules = {};
    }

    ExtensionManager.prototype.addFilesFromPath = function(root) {
      if (!this.xiki.exists(root)) {

      }
    };

    ExtensionManager.prototype.update = function(extdir) {
      var dir, _i, _len, _ref, _results;
      if (this.updating) {
        return;
      }
      try {
        this.updating = true;
        _ref = this.xiki.getSearchPath(extdir);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          dir = _ref[_i];
          _results.push(this.addFilesFromPath(dir));
        }
        return _results;
      } finally {
        this.updating = false;
      }
    };

    return ExtensionManager;

  })();

  Extension = (function() {
    function Extension() {}

    return Extension;

  })();

  BaseXiki = (function(_super) {
    __extends(BaseXiki, _super);

    function BaseXiki(name) {
      if (!name) {
        name = this.constructor.name;
      }
      this.name = name;
    }

    return BaseXiki;

  })(mixOf(StaticVariableInterface, SettingsInterface, FileSystemInterface, ExecuteProgramInterface, CompletionInterface));

}).call(this);
